var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "LoginView", function () {
    return LoginView;
  });
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require("prop-types");
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  require("./login-view.scss");
  var _s = $RefreshSig$();
  function LoginView(props) {
    _s();
    const [username, setUsername] = _react.useState("");
    const [password, setPassword] = _react.useState("");
    const handleSubmit = () => {
      e.preventDefault();
      console.log(username, password);
      /*Send a request to the server for authentication*/
      /*then call props.onLoggedIn(username)*/
      props.onLoggedIn(username);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", null, /*#__PURE__*/_reactDefault.default.createElement("form", {
        className: "login"
      }, /*#__PURE__*/_reactDefault.default.createElement("label", null, "Username:", /*#__PURE__*/_reactDefault.default.createElement("input", {
        type: "text",
        value: username,
        onChange: e => setUsername(e.target.value)
      })), /*#__PURE__*/_reactDefault.default.createElement("label", null, "Password:", /*#__PURE__*/_reactDefault.default.createElement("input", {
        type: "password",
        value: password,
        onChange: e => setPassword(e.target.value)
      })), /*#__PURE__*/_reactDefault.default.createElement("button", {
        type: "submit",
        onClick: handleSubmit
      }, "Submit")))
    );
  }
  _s(LoginView, "Lrw7JeD9zj6OUWhT/IH4OIvPKEk=");
  _c = LoginView;
  LoginView.propTypes = {
    user: _propTypesDefault.default.shape({
      username: _propTypesDefault.default.string.isRequired,
      password: _propTypesDefault.default.string.isRequired
    }),
    onLoggedIn: _propTypesDefault.default.func.isRequired,
    onRegister: _propTypesDefault.default.func
  };
  var _c;
  $RefreshReg$(_c, "LoginView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
