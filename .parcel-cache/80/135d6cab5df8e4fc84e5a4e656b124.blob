var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MainView", function () {
    return MainView;
  });
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _loginViewLoginView = require("../login-view/login-view");
  var _registrationViewRegistrationView = require("../registration-view/registration-view");
  var _movieCardMovieCard = require("../movie-card/movie-card");
  var _movieViewMovieView = require("../movie-view/movie-view");
  require("./main-view.scss");
  var _jsxFileName = "C:\\Users\\Jason\\Documents\\GitHub\\myFlix-client\\src\\components\\MainView\\main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      // Initial state is set to null
      this.state = {
        movies: [],
        selectedMovie: null,
        user: null
      };
    }
    componentDidMount() {
      _axiosDefault.default.get("https://movieflixappjp.herokuapp.com/movies").then(response => {
        this.setState({
          movies: response.data
        });
      }).catch(error => {
        console.log(error);
      });
    }
    /*When a movie is clicked, this function is invoked and updates the state of the `selectedMovie` *property to that movie*/
    onMovieClick(movie) {
      this.setState({
        selectedMovie: movie
      });
    }
    /*When a user successfully logs in, this function updates the `user` property in state to that *particular user*/
    onLoggedIn(user) {
      this.setState({
        user
      });
    }
    /**/
    onRegister(register) {
      this.setState({
        register
      });
    }
    /*When back button click selectedMovie will set on it's initial state*/
    setInititalState() {
      this.setState({
        selectedMovie: null
      });
    }
    render() {
      const {movies, selectedMovie, user, register} = this.state;
      /*If there is no user, the LoginView is rendered. If there is a user logged in, the user details are *passed as a prop to the LoginView*/
      if (!user) return (
        /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
          onLoggedIn: user => this.onLoggedIn(user),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 69,
            columnNumber: 14
          }
        })
      );
      /*Register*/
      if (!register) return (
        /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegisterView, {
          onRegister: register => this.onRegister(register),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 74,
            columnNumber: 9
          }
        })
      );
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 78,
            columnNumber: 7
          }
        }, selectedMovie ? /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
          movie: selectedMovie,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 80,
            columnNumber: 11
          }
        }) : movies.map(movie => /*#__PURE__*/_reactDefault.default.createElement(_movieCardMovieCard.MovieCard, {
          key: movie._id,
          movieData: movie,
          onClick: movie => this.onMovieClick(movie),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 83,
            columnNumber: 13
          }
        })))
      );
    }
  }
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
